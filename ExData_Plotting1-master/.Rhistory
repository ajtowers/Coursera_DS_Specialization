print(p)
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each = 50)
y < - x + f - f * x + rnorm(100, sd = 0.5)
x
f
y
f <- factor(f, labels = c('Group 1', 'Group 2'))
xyplot(y ~ x | f, layout = c(2, 1))
y <- x + f - f * x + rnorm(100, sd = 0.5)
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
f <- factor(f, labels = c('Group 1', 'Group 2'))
xyplot(y ~ x | f, layout = c(2, 1))
install.packages("ggplot2")
install.packages(c("boot", "class", "cluster", "codetools", "jsonlite", "MASS", "mgcv", "nlme", "R6"))
library(ggplot2)
str(mpq)
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c('point', 'smooth'))
qplot(displ, hwy, data = mpg, geom = c('point', 'smooth'))
qplot(displ, hwy, data = mpg, facets = . ~ drv
)
qplot(displ, hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(displ, hwy, data = mpg, facets = . ~ drv
)
qplot(displ, hwy, data = mpg, facets = drv ~ .)
str(maacs)
library(datasets)
str(maacs)
library(datasets)
head(airquality)
str(airquality)
library(ggplot2)
g <- ggplot(airquality, aes(Solar.R, Ozone))
print(g)
p <- g + geom.point()
p <- g + geom_point()
str(p)
str(q)
str(g)
print(p)
g + geom_point()
g + geom_point()
p + geom_smooth()
p + geom_smooth(method = 'lm')
q <- p + geom_smooth(method = 'lm')
q <- q + facet_grid(. ~ Month)
print(q)
q + theme_bw()
q <- q - facet_grid(. ~ Month)
q
q + geom_point(color = 'steelblue', size = 4, alpha = 1/2)
g
g + geom_point(aes(color = Month), size = 4., alpha = .5)
q
q + theme_bw(base_family = "Arial")
airquality
head(airquality)
range(Temp)
range(airquality$Temp)
cutpoints <- quantile(airquality$Temp, seq(0, 1, length = 3, na.rm = TRUE))
cutpoints <- quantile(airquality$Temp, seq(0, 1, length = 3), na.rm = TRUE))
cutpoints <- quantile(airquality$Temp, seq(0, 1, length = 3), na.rm = TRUE)
cutpoints
cutpoints <- quantile(airquality$Temp, seq(0, 1, length = 4), na.rm = TRUE)
cutpoints
airquality$TempFactor <- cut(airquality$Temp, cutpoints)
head(airquality)
levels(airquality$TempFactor)
rm(p, q)
g
str(g)
g <- ggplot(airquality, aes(Ozone, Solar.R))
g + geom_point(alpha = 1/3)
g <- ggplot(airquality, aes(Solar.R, Ozone))
g + geom_point(alpha = 1/3)
g + facet_wrap(Temp ~ TempFactor, nrow = 2, ncol = 3)
g + facet_wrap(Temp ~ TempFactor, nrow = 2, ncol = 3) + geom_point(alpha = 1/3)
g + facet_wrap(Temp ~ TempFactor, nrow = 2, ncol = 4) + geom_point(alpha = 1/3)
?facet_wrap
g + facet_wrap(~ TempFactor, nrow = 2, ncol = 3) + geom_point(alpha = 1/3)
g + facet_wrap(~ TempFactor, nrow = 1, ncol = 3) + geom_point(alpha = 1/3)
g + facet_wrap(~ TempFactor, nrow = 1, ncol = 3, na.rm = TRUE) + geom_point(alpha = 1/3)
g + facet_wrap(~ TempFactor, nrow = 2, ncol = 3) + geom_point(alpha = 1/3) + stat_binhex(na.rm = TRUE)
g + facet_wrap(~ TempFactor, nrow = 2, ncol = 3) + geom_point(alpha = 1/3, na.rm = TRUE)
g + facet_wrap(~ TempFactor, nrow = 1, ncol = 3) + geom_point(alpha = 1/3, na.rm = TRUE)
g + facet_wrap(~ TempFactor, nrow = 2, ncol = 3) + geom_point(alpha = 1/3, na.rm = TRUE)
g + facet_wrap(~ TempFactor, nrow = 2, ncol = 3) + geom_point(alpha = 1/3, na.rm = TRUE) + geom_smooth(method = 'lm', se = FALSE, col = "steelblue")
g + facet_wrap(~ TempFactor, nrow = 2, ncol = 3) + geom_point(alpha = 1/3, na.rm = TRUE) + geom_smooth(method = 'lm', se = FALSE, col = "steelblue") + theme_bw(base_family = "Avenir", base_size = 10)
g + facet_wrap(~ TempFactor, nrow = 2, ncol = 3) + geom_point(alpha = 1/3, na.rm = TRUE) + geom_smooth(method = 'lm', se = FALSE, col = "steelblue") + theme_bw(base_family = "Avenir", base_size = 10) + labs(x = expression("log " * Temp[base]))
rm(cutpoints, g)
head(airquality)
levels(TempFactor)
levels(airquality$TempFactor)
?levels
levels(airquality$TempFactor) <- c('low', 'mid', 'high')
levels(airquality$TempFactor)
head(airquality)
rm(list=ls())
ls()
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
plot(x)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(y)
plot(x, y)
plot(x, y, col = 'blue', pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
dataframe <- data.frame(x = x, y = y)
dist(dataframe)
?dist
distxy <- dist(dataframe)
hclustering <- hclust(distxy)
plot(hclustering)
myplclust(hclustering, lab= rep(1:3, each = 4), lab.col = rep(1:3, each = 4))
world_map <- map_data('world')
library(maps)
install.packages("maps")
install.packages("mapStats")
world_map <- map_data('world')
world_map
world_map <- map_data('world', region=c('China', 'Japan', 'Korea'))
world_map
ggplot(world_map)
ggplot(world_map, aes(x = long, y = lat, group = group, fill = region))
ggplot(world_map, aes(x = long, y = lat, group = group, fill = region)) + geom_polygon(color = 'black')
world_map <- map_data('world', region=c('China', 'Japan', 'North Korea'))
ggplot(world_map, aes(x = long, y = lat, group = group, fill = region)) + geom_polygon(color = 'black')
world_map <- map_data('world', region=c('China', 'Japan', 'North Korea', 'South Korea', 'Indonesia'))
ggplot(world_map, aes(x = long, y = lat, group = group, fill = region)) + geom_polygon(color = 'black')
world_map <- map_data('world', region=c('China', 'Japan', 'North Korea', 'South Korea'))
ggplot(world_map, aes(x = long, y = lat, group = group, fill = region)) + geom_polygon(color = 'black')
southam <- map_data('world', region=c('Argentine', 'Chile', 'Uruguay', 'Bolivia', 'Brazil'))
ggplot(southam, aes(x = long, y = lat, group = group, fill = region)) + geom_polygon(color = 'black')
southam <- map_data('world', region=c('Argentina', 'Chile', 'Uruguay', 'Bolivia', 'Brazil'))
ggplot(southam, aes(x = long, y = lat, group = group, fill = region)) + geom_polygon(color = 'black')
southam <- map_data('world', region=c('Argentina', 'Chile', 'Uruguay', 'Bolivia', 'Brazil', 'Paraguay', 'Peru', 'Ecuador', 'Colombia', 'Venezuela', 'Guayana'))
ggplot(southam, aes(x = long, y = lat, group = group, fill = region)) + geom_polygon(color = 'black')
southam <- map_data('world', region=c('Argentina', 'Chile', 'Uruguay', 'Bolivia', 'Brazil', 'Paraguay', 'Peru', 'Ecuador', 'Colombia', 'Venezuela', 'Guyana'))
ggplot(southam, aes(x = long, y = lat, group = group, fill = region)) + geom_polygon(color = 'black')
southam <- map_data('world', region=c('Argentina', 'Chile', 'Uruguay', 'Bolivia', 'Brazil', 'Paraguay', 'Peru', 'Ecuador', 'Colombia', 'Venezuela', 'Guyana', 'Surinam'))
ggplot(southam, aes(x = long, y = lat, group = group, fill = region)) + geom_polygon(color = 'black')
southam <- map_data('world', region=c('Argentina', 'Chile', 'Uruguay', 'Bolivia', 'Brazil', 'Paraguay', 'Peru', 'Ecuador', 'Colombia', 'Venezuela', 'Guyana', 'Surinam', 'Guayana Francesa'))
ggplot(southam, aes(x = long, y = lat, group = group, fill = region)) + geom_polygon(color = 'black')
southam <- map_data('world', region=c('Argentina', 'Chile', 'Uruguay', 'Bolivia', 'Brazil', 'Paraguay', 'Peru', 'Ecuador', 'Colombia', 'Venezuela', 'Guyana', 'Surinam', 'Guayana'))
ggplot(southam, aes(x = long, y = lat, group = group, fill = region)) + geom_polygon(color = 'black')
argentina <- map_data('world', region=c('Argentina'))
ggplot(argentina, aes(x = long, y = lat, group = group, fill = region)) + geom_polygon(color = 'black')
test <- read.table('/GCD/test/X.test.txt')
getwd()
dir()
dir <- '/GCD/test/'
file <- dir + 'X_test.txt'
file <- paste(dir, 'X_test.txty')
file <- paste(dir, 'X_test.txt')
file
file <- paste(dir, 'X_test.txt', sep="")
file
test <- read.table(file)
getwd()
dir <- 'GCD/test/'
file <- paste(dir, 'X_test.txt', sep="")
file
test <- read.table(file)
head(test)
test_x <- test
rm(test)
test_y <- read.table(paste(dir, 'Y_test.txt'))
test_y <- read.table(paste(dir, 'Y_test.txt', sep=''))
test_subj <- read.table(paste(dir, 'subjecdt_test.txt', sep=''))
test_subj <- read.table(paste(dir, 'subject_test.txt', sep=''))
range(test_subj)
range(test_y)
body_acc_x <- read.table(paste(dir, 'Inertial Signals/', 'body_acc_x_test.txt', sep =''))
str(body_acc_x)
dftest <- cbind(test_subj, test_y, test_x)
names(dftest)
names(dftest) <- c('Subject', 'Activity')
names(dftest)
dftest <- cbind(test_subj, test_y, test_x)
names()
names(dftest)
names(dftest)[1] <- 'Subject'
names(dftest)[2] <- 'Activity'
names(dftest)
str(dftest)
dir()
dir <- 'GCD/'
subj_test <- read.table(paste(dir, 'test/', 'subject_test.txt', sep=''))
y_test <- read.table(paste(dir, 'test/', 'y_test.txt', sep=''))
y_names <- read.table(paste(dir, 'activity_levels.txt'))
y_names <- read.table(paste(dir, 'activity_labels.txt'))
y_names <- read.table(paste(dir, 'activity_labels.txt', sep=''))
y_test <- as.factor(y_test)
class(y_test)
?transform
x_test <- read.table(paste(dir, 'test/', 'x_test.txt', sep=''))
df1 <- cbind(subj_test, y_test, x_test)
transform(df1, y_test = as.factor(y_test))
attach(df1)
source('~/.active-rstudio-document')
str(uciCar)
head(uciCar)
dim(uciCar)
summary(uciCar)
source('~/.active-rstudio-document')
str(d)
source('~/.active-rstudio-document')
help(class(d))
source('~/Workspace/R/PDM/German credit.R')
summary(d$Purpose)
table(d$Purpose, d$Good.Loan)
getwd()
dir()
source('~/Workspace/R/PDM/Exploring data.R')
source('~/Workspace/R/PDM/Exploring data.R')
summary(custdata)
attach(custdata)
quantile(age, c(.1, .9))
count(age>77)
dettach(custdata)
detach(custdata)
sum(custdata[, age > 77])
sum(custdata[, custdata$age > 77])
sum(custdata[custdata$age > 77,])
str(custdata)
age10pcttop <- custdata[custdata$>77, c(custdata$custid, custdata$sex, custdata$income)]
age10pcttop <- custdata[custdata$age>77, c(custdata$custid, custdata$sex, custdata$income)]
head(custdata)
swirl)=
swirl()
library(swirl)
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim()
dim(mydf)
head()
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm('mydf')
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
select(cran, 2:4)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500,  r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
cran3
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm('mydf')
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(cran, mean(size))
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
head(top_counts, 20)
arrange(top_counts, desc(count))
bye()
swirl()
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
submit)=
submit)=
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate()
?separate
separate(data = res, col = sex_class into = c('sex', 'class'))
separate(data = res, col = sex_class, into = c('sex', 'class'))
submit()
students3
?gather
submit()
?spread
submit()
submit()
submit()
?gather
submit()
extract_numeric('class5')
submit()
?mutate
?extract_numeric
submit()
?mutate
submit()
students3 %>% gather(class, grade, class1:class5, na.rm = TRUE) %>% spread(test, grade)
students3 %>% gather(class, grade, class1:class5, na.rm = TRUE) %>% spread(test, grade) %>% mutate(class = extract_numeric(class))
submit()
skip()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
?rbind_list
rbind_list(passed, failed)
sat
?select
?gather
?separate
submit()
submit()
submit()
submit()
Sys.getlocale('LC_TIME')
library(lubridate)
help(package = lubridate)
bye()
swirl()
today()
this_day <- today()
this_day
month(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
hour(this_moment)
ymd('1989-05-17')
my_date <- ymd('1989-05-17')
my_date
class(my_date)
ymd('1989 May 17')
mdy('March 12, 1975')
dmy(25081985)
ymd('192012')
ymd('1920-1-2')
dt1
ymd_hms(dt1)
hms('03:22:14')
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(hours = 23, minutes = 51)
this_moment <- update(this_moment, hours = 23, minutes = 51)
this_moment
?now
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone='Asia/Hong_Kong')
arrive
last_time <- mdy('June 17, 2008', tz = 'Singapore')
last_time
?new_interval()
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
rm(list=ls())
data <- download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv')
?download.file
data <- download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv', datafile)
data <- download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv', destfile = 'datafile')
data <- download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv', destfile = 'datafile', method = 'curl')
data
data <- read.table('datafile')
data
data <- read.csv('datafile')
head(data)
names(data)
str(data)
attach(data)
val
data$val
VAL
data2 <- select(data, VAL == 24)
data2
?select
data2 <- select(VAL)
data2 <- select(data, VAL)
data 2
head(data2, 10)
data %>%
select(VAL)
filter(VAL == 24)
data %>% select(VAL) %>% filter(VAL == 24) %>% mutate(sum(count))
data %>% select(VAL) %>% filter(VAL == 24) %>% mutate(count)
?mutate
data %>% select(VAL) %>% group_by(VAL)
?group_by
source('~/Workspace/R/ExData_Plotting1/plot1.R')
setwd('ExData_Plotting1/')
source('~/Workspace/R/ExData_Plotting1/plot1.R')
source('~/Workspace/R/ExData_Plotting1/plot1.R')
source('~/Workspace/R/ExData_Plotting1/plot2.R')
library(data.table)
f <- fread(input = 'household_power_consumption.txt',
sep = ";",
header = TRUE,
na.strings = "?",
colClasses = 'character'
)
names(f)
source('~/Workspace/R/ExData_Plotting1/plot3.R')
str(dt)
source('~/Workspace/R/ExData_Plotting1/plot3.R')
f[1:10, c(1, 7:9)]
f[1:10, {Date, Sub_metering_1:Sub_metering_3)]
f[1:10, {Date, Sub_metering_1:Sub_metering_3}]
f[1:10, list(Date, Sub_metering_1:Sub_metering_3)]
f[1:10, list(Date, Sub_metering_1, Sub_metering_2, Sub_metering_3)]
f[200:220, list(Date, Sub_metering_1, Sub_metering_2, Sub_metering_3)]
f[500:520, list(Date, Sub_metering_1, Sub_metering_2, Sub_metering_3)]
str(dt)
names(dt)
dt[1:10, list(newDate, sub1, sub2, sub3)]
source('~/Workspace/R/ExData_Plotting1/plot3.R')
source('~/Workspace/R/ExData_Plotting1/plot3.R')
str(dt)
dt[1:10, list(newDate, Sub_metering_1, Sub_metering_2, Sub_metering_3)]
source('~/Workspace/R/ExData_Plotting1/plot3.R')
str(dt)
f[1:10, list(Date, Sub_metering_1, Sub_metering_2, Sub_metering_3)]
source('~/Workspace/R/ExData_Plotting1/plot3.R')
str(dt)
source('~/Workspace/R/ExData_Plotting1/plot3.R')
str(dt)
source('~/Workspace/R/ExData_Plotting1/plot3.R')
source('~/Workspace/R/ExData_Plotting1/plot3.R')
source('~/Workspace/R/ExData_Plotting1/plot3.R')
?complete.cases
source('~/Workspace/R/ExData_Plotting1/plot3.R')
source('~/Workspace/R/ExData_Plotting1/plot3.R')
source('~/Workspace/R/ExData_Plotting1/plot3.R')
?axis
?title
source('~/Workspace/R/ExData_Plotting1/plot3.R')
source('~/Workspace/R/ExData_Plotting1/plot3.R')
source('~/Workspace/R/ExData_Plotting1/plot3.R')
source('~/Workspace/R/ExData_Plotting1/plot3.R')
help(fread)
source('~/Workspace/R/ExData_Plotting1/plot3.R')
source('~/Workspace/R/ExData_Plotting1/plot3.R')
source('~/Workspace/R/ExData_Plotting1/plot3.R')
source('~/Workspace/R/ExData_Plotting1/plot3.R')
source('~/Workspace/R/ExData_Plotting1/plot3.R')
source('~/Workspace/R/ExData_Plotting1/plot3.R')
source('~/Workspace/R/ExData_Plotting1/plot3.R')
source('~/Workspace/R/ExData_Plotting1/plot3.R')
source('~/Workspace/R/ExData_Plotting1/plot3.R')
?par
?legend
source('~/Workspace/R/ExData_Plotting1/plot3.R')
